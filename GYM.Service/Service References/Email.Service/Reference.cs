//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GYM.Service.Email.Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Attachment", Namespace="http://schemas.datacontract.org/2004/07/Notifications.Email")]
    [System.SerializableAttribute()]
    public partial class Attachment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string contentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string contentidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dispositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string filenameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string content {
            get {
                return this.contentField;
            }
            set {
                if ((object.ReferenceEquals(this.contentField, value) != true)) {
                    this.contentField = value;
                    this.RaisePropertyChanged("content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string contentid {
            get {
                return this.contentidField;
            }
            set {
                if ((object.ReferenceEquals(this.contentidField, value) != true)) {
                    this.contentidField = value;
                    this.RaisePropertyChanged("contentid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string disposition {
            get {
                return this.dispositionField;
            }
            set {
                if ((object.ReferenceEquals(this.dispositionField, value) != true)) {
                    this.dispositionField = value;
                    this.RaisePropertyChanged("disposition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string filename {
            get {
                return this.filenameField;
            }
            set {
                if ((object.ReferenceEquals(this.filenameField, value) != true)) {
                    this.filenameField = value;
                    this.RaisePropertyChanged("filename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Email.Service.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Send", ReplyAction="http://tempuri.org/IService/SendResponse")]
        bool Send(string subject, string email, string content, string from, string fromName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SendAttach", ReplyAction="http://tempuri.org/IService/SendAttachResponse")]
        bool SendAttach(string subject, string email, string content, GYM.Service.Email.Service.Attachment[] attachments, string from, string fromName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SendByCFIAService", ReplyAction="http://tempuri.org/IService/SendByCFIAServiceResponse")]
        bool SendByCFIAService(string recipient, string from, string subject, string body, string archives, bool format);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : GYM.Service.Email.Service.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<GYM.Service.Email.Service.IService>, GYM.Service.Email.Service.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Send(string subject, string email, string content, string from, string fromName) {
            return base.Channel.Send(subject, email, content, from, fromName);
        }
        
        public bool SendAttach(string subject, string email, string content, GYM.Service.Email.Service.Attachment[] attachments, string from, string fromName) {
            return base.Channel.SendAttach(subject, email, content, attachments, from, fromName);
        }
        
        public bool SendByCFIAService(string recipient, string from, string subject, string body, string archives, bool format) {
            return base.Channel.SendByCFIAService(recipient, from, subject, body, archives, format);
        }
    }
}
